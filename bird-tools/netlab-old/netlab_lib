
shopt -s nullglob

export COMMON="../common"
export CONFIG="../config"

function netlab_init_node()
{
	N=$1

	echo Preparing $N

	netns_new sleep 30d &
	PID=$!
	eval $N=$PID
	echo $PID > $N.pid

	sleep .1
	netns_run $PID ip -4 rule add l3mdev priority 1000
	netns_run $PID ip -6 rule add l3mdev priority 1000
}


function netlab_init()
{
	for N in $NETLAB_NODES
	do netlab_init_node $N
	done

	echo
}


function netlab_start_node()
{
	N=$1
	PID=${!N}

	echo Starting $N
	mkdir $N
	cd $N

	if [ -f $CONFIG/$N.start ]
	then netns_run $PID bash $CONFIG/$N.start $N
	fi

	if [ -f $COMMON/common.start ]
	then netns_run $PID bash $COMMON/common.start $N
	fi

	cd ..
	echo
}

function netlab_stop_node()
{
	N=$1
	PID=$2

	echo Stopping $N
	cd $N

	if [ -f $COMMON/common.stop ]
	then netns_run $PID bash $COMMON/common.stop $N
	fi

	if [ -f $CONFIG/$N.stop ]
	then netns_run $PID bash $CONFIG/$N.stop $N
	fi

	cd ..
	rm -rf $N
	echo

	kill $PID
	rm $N.pid
}

function netlab_start()
{
	for N in $NETLAB_NODES
	do netlab_start_node $N
	done
}

function netlab_stop()
{
	for N in *.pid
	do netlab_stop_node ${N%.pid} $(cat $N)
	done
}



function if_dummy()
{
	NS=${1%%/*}
	IF=$2

	ip link add name $IF netns $NS type dummy
	if [[ $1 == */* ]]; then netns_run $NS ip link set $IF vrf ${1##*/} ; fi

	netns_run $NS ip link set $IF up

	if [[ $3 == */* ]]
	then netns_run $NS ip addr add $3 dev $IF
	else netns_run $NS ip addr add "${3}.1/24" dev $IF
	fi

	if [[ $4 == */* ]]
	then netns_run $NS ip addr add $4 dev $IF
	else netns_run $NS ip addr add "${4}::1/64" dev $IF
	fi
}

function if_veth()
{
	NS1=${1%%/*}
	IF1=$2
	NS2=${3%%/*}
	IF2=$4

	ip link add name $IF1 netns $NS1 type veth peer name $IF2 netns $NS2
	if [[ $1 == */* ]]; then netns_run $NS1 ip link set $IF1 vrf ${1##*/} ; fi
	if [[ $3 == */* ]]; then netns_run $NS2 ip link set $IF2 vrf ${3##*/} ; fi

	netns_run $NS1 ip link set $IF1 up
	netns_run $NS2 ip link set $IF2 up
	netns_run $NS1 ip addr add ${5}.1/24 dev $IF1
	netns_run $NS2 ip addr add ${5}.2/24 dev $IF2

	if [ -n "$6" ]
	then
		netns_run $NS1 ip addr add ${6}::1/64 dev $IF1
		netns_run $NS2 ip addr add ${6}::2/64 dev $IF2
	fi
}

function vrf()
{
	NS=$1
	IF=$2

	ip link add name $IF netns $NS type vrf table $3
	netns_run $NS ip link set $IF up
}
