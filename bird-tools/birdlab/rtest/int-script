#!/bin/bash
REV=$1
cd $GIT_WORK_TREE

pushd /var/lib/virt/nfs
rsync -a --exclude=.git $(readlink -f $GIT_WORK_TREE) /var/lib/virt/nfs/bird-test-$REV

rm -f net/misc-at{dL,dR,d,c,o,f,n,g}-conf
touch net/misc-at{dL,dR,d,c,o,f,n,g}-conf

declare -a TOK=( dL dR d c o f n g ) 
declare -A IPA=( \
  [dL]=10.55.254.1 \
  [dR]=10.55.255.1 \
  [d]=10.55.1.1 \
  [o]=10.55.2.1 \
  [f]=10.55.3.1 \
  [n]=10.55.4.1 \
  [c]=10.55.5.1 \
  [g]=10.55.6.1 \
)

declare -A SR4=( \
  [dL]="10.56.254.0/24 via 10.55.254.55" \
  [dR]="10.56.255.0/24 via 10.55.255.55" \
  [d]="10.56.1.0/24 via 10.55.1.55" \
  [o]="10.56.2.0/24 via 10.55.2.55" \
  [f]="10.56.3.0/24 via 10.55.3.55" \
  [n]="10.56.4.0/24 via 10.55.4.55" \
  [c]="10.56.5.0/24 via 10.55.5.55" \
  [g]="10.56.6.0/24 via 10.55.6.55" \
)

declare -A SR6=( \
  [dL]="fd01:56:fffe::/64 via fd01:55:fffe::55" \
  [dR]="fd01:56:ffff::/64 via fd01:55:ffff::55" \
  [d]="fd01:56:1::/64 via fd01:55:1::55" \
  [o]="fd01:56:2::/64 via fd01:55:2::55" \
  [f]="fd01:56:3::/64 via fd01:55:3::55" \
  [n]="fd01:56:4::/64 via fd01:55:4::55" \
  [c]="fd01:56:5::/64 via fd01:55:5::55" \
  [g]="fd01:56:6::/64 via fd01:55:6::55" \
)

function cf() {
  local -a AR
  while [ "$1" != "--" ]; do
    AR+=( $1 )
    shift
  done

  if [ -z "${AR[@]}" ]; then
    AR=( ${TOK[@]} )
  fi

  shift

  # echo tee -a $( for F in ${AR[@]}; do echo net/misc-at$F-conf; done )
  "$@" | tee -a $( for F in ${AR[@]}; do echo net/misc-at$F-conf; done ) #> /dev/null
}

function cfe() {
  cf -- echo "$@"
}

function cfc() {
  cf -- cat
}

for T in ${TOK[@]}; do
  cf $T -- echo "log \"/mnt/nfs/tmp/bird-at$T.log\" all;"
  cf $T -- echo "router id ${IPA[$T]};"
done

cfe "# marker"

cfc <<EOF
debug protocols { events };

protocol device {
	scan time 10;
}

protocol kernel {
#	learn;
#	persist;
	ipv4 { import all; export all; };
	scan time 20;
#	debug all;
}

protocol kernel {
#	learn;
#	persist;
	ipv6 { import all; export all; };
	scan time 20;
#	debug all;
}

EOF

for T in ${TOK[@]}; do
  cf $T -- cat <<EOF
protocol static {
	ipv4;
	route ${SR4[$T]};
}

protocol static {
	ipv6;
	route ${SR6[$T]};
}
EOF
done

cfc <<EOF
protocol bfd {
}

protocol ospf v2 o4 {
	ipv4 { import all; export all; };
#	debug all;
	area 0 {
		interface "INAME" { hello 5; type ptp; cost 20; bfd; };
	};
}

protocol ospf v3 o6 {
	ipv6 { import all; export all; };
#	debug all;
	area 0 {
		interface "INAME" { hello 5; type ptp; cost ICOST; bfd; };
	};
}
EOF

for T in dL dR; do
  cf $T -- cat <<EOF
ipv4 table b4;
ipv6 table b6;

template bgp bc {
	local ${IPA[$T]} as 65123;
	ipv4 {
		import all;
		export all;
		table b4;
		igp table master4;
		next hop self;
	};
	ipv6 {
		import all;
		export all;
		table b6;
		igp table master6;
		next hop self;
	};
}
EOF
done

cf dL -- cat <<EOF
protocol bgp uplink4 {
	local 192.168.236.195 as 65123;
	neighbor 192.168.192.1 as 65534;
	ipv4 {
		import all;
		export none;
		table b4;
		igp table master4;
	};
}

protocol bgp uplink6 {
	local 2001:1488:a001::236:195 as 65123;
	neighbor 2001:1488:a001::1 as 65534;
	ipv6 {
		import all;
		export none;
		table b6;
		igp table master6;
	};
}
EOF

for T in ${TOK[@]}; do
  case $T in dL|dR) continue ;; esac

  cf dL -- cat <<EOF
protocol bgp from bc {
	neighbor ${IPA[$T]} as 65123;
}
EOF
  cf dR -- cat <<EOF
protocol bgp from bc {
	neighbor ${IPA[$T]} as 65123;
}
EOF

  cf $T -- cat <<EOF
ipv4 table b4;
ipv6 table b6;

protocol bgp {
	local ${IPA[$T]} as 65123;
	neighbor ${IPA[dL]} as 65123;
	ipv4 {
		import all;
		export all;
		table b4;
		igp table master4;
	};
	ipv6 {
		export all;
		import all;
		table b6;
		igp table master6;
	};
	# multihop;
}

protocol bgp {
	local ${IPA[$T]} as 65123;
	neighbor ${IPA[dR]} as 65123;
	ipv4 {
		# import all;
		import filter { if net ~ 64.0.0.0/7 then accept; reject; };
		export all;
		table b4;
		igp table master4;
	};
	ipv6 {
		export all;
		import all;
		table b6;
		igp table master6;
	};
	# multihop;
}
EOF
done

for T in ${TOK[@]}; do
  cat <<'EOF' > rc/rc-loc-at$T
OSPF_INAME_SED="x;"
echo "Interface list:" ${INTERFACES[@]}

for I in ${INTERFACES[@]}; do
  case $UNAME in
    netbsd|openbsd|freebsd) COST=$((0x$(ifconfig ${I%%;*} | md5) % 75 + 150)) ;;
    linux)	  COST=$((0x$(ip addr show dev ${I%%;*} | md5) % 75 + 150)) ;;
  esac
  OSPF_INAME_SED="$OSPF_INAME_SED G; s/INAME/${I%%;*}/; s/ICOST/$COST/;"
done

OSPF_INAME_SED="$OSPF_INAME_SED x; s/.*//; x;"

SED_PATTERN="$SED_PATTERN /INAME/ { $OSPF_INAME_SED };"

echo "Sed pattern: $SED_PATTERN"
CONFFILE="/mnt/nfs/net/misc-$HOSTNAME-conf"

sed "$SED_PATTERN" $CONFFILE > /etc/bird.conf
EOF
  echo "rsync --exclude=.git -av /mnt/nfs/bird-test-$REV/ /tmp/bird" >> rc/rc-loc-at$T
  cat <<EOF >> rc/rc-loc-at$T
cd /tmp/bird
\$AUTOCONF
./configure --sysconfdir=/etc --with-runtimedir=/run
#./configure --enable-debug
#sed -e 's/-g -O2/-g3 -O0/' -i obj/Rules
\$MAKE
\$MAKE install
PATH=\$PATH:/usr/local/sbin
ulimit -c unlimited
bird
EOF
done

vctl restart -m $( for T in ${TOK[@]}; do echo at$T; done )
