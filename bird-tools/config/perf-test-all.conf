log "perftest.log" all;
router id 1.1.1.1;

protocol device {}

template perf pt {
  disabled;
  exp from 10;
  exp to 26;
  repeat 7;
  threshold max 200 ms;
  threshold min 1 ms;
}

function f_reject() {
  reject;
}

define indirect = 6;

protocol perf perf_none from pt { ipv4 { import none; }; }
protocol perf perf_reject from pt { ipv4 { import filter { reject; }; }; }
protocol perf perf_false from pt { ipv4 { import where false; }; }

protocol perf perf_call from pt { ipv4 { import filter { f_reject(); }; }; }

filter f_assign_int_constant int x; { x = 5; reject; };
protocol perf perf_assign_int_constant from pt { ipv4 { import filter  f_assign_int_constant; }; }

filter f_assign_ip_constant ip x; { x = 66.66.66.66; reject; };
protocol perf perf_assign_ip_constant from pt { ipv4 { import filter  f_assign_ip_constant; }; }

filter f_assign_indirect int x; { x = indirect; reject; };
protocol perf perf_assign_indirect from pt { ipv4 { import filter  f_assign_indirect; }; }

filter f_set_pref { preference = 64; reject; };
protocol perf perf_set_pref from pt { ipv4 { import filter  f_set_pref; }; }

filter f_set_rta { scope = SCOPE_SITE; reject; };
protocol perf perf_set_rta from pt { ipv4 { import filter  f_set_rta; }; }

filter f_set_ea { bgp_next_hop = 42.42.42.42; reject; };
protocol perf perf_set_ea from pt { ipv4 { import filter  f_set_ea; }; }

filter f_get_pref int x; { preference = 64; x = preference; reject; };
protocol perf perf_get_pref from pt { ipv4 { import filter  f_get_pref; }; }

filter f_get_rta ip x; { x = gw; reject; };
protocol perf perf_get_rta from pt { ipv4 { import filter  f_get_rta; }; }

filter f_get_ea ip x; { bgp_next_hop = 42.42.42.42; x = bgp_next_hop; reject; };
protocol perf perf_get_ea from pt { ipv4 { import filter  f_get_ea; }; }

filter f_construct_ec ec x; { x = (ro, 42, 42); reject; };
protocol perf perf_construct_ec from pt { ipv4 { import filter f_construct_ec; }; }

filter f_path_prepend0 { bgp_path = +empty+; reject; }
protocol perf perf_path_prepend0 from pt { ipv4 { import filter f_path_prepend0; }; }

filter f_path_prepend1 { bgp_path = +empty+; bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend1 from pt { ipv4 { import filter f_path_prepend1; }; }

filter f_path_prepend2 { bgp_path = +empty+; bgp_path.prepend(42); bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend2 from pt { ipv4 { import filter f_path_prepend2; }; }

filter f_path_prepend3 { bgp_path = +empty+; bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend3 from pt { ipv4 { import filter f_path_prepend3; }; }

filter f_path_prepend4 { bgp_path = +empty+; bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend4 from pt { ipv4 { import filter f_path_prepend4; }; }

filter f_path_prepend5 { bgp_path = +empty+; bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend5 from pt { ipv4 { import filter f_path_prepend5; }; }

filter f_path_prepend6 { bgp_path = +empty+; bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); bgp_path.prepend(42); reject; }
protocol perf perf_path_prepend6 from pt { ipv4 { import filter f_path_prepend6; }; }

attribute int p1;
attribute int p2;
attribute int p3;
attribute int p4;
attribute int p5;
attribute int p6;

filter f_custom1 { p1 = 42; reject; }
protocol perf perf_custom1 from pt { ipv4 { import filter f_custom1; }; }
filter f_custom2 { p1 = 42; p2 = 42; reject; }
protocol perf perf_custom2 from pt { ipv4 { import filter f_custom2; }; }
filter f_custom3 { p1 = 42; p2 = 42; p3 = 42; reject; }
protocol perf perf_custom3 from pt { ipv4 { import filter f_custom3; }; }
filter f_custom4 { p1 = 42; p2 = 42; p3 = 42; p4 = 42; reject; }
protocol perf perf_custom4 from pt { ipv4 { import filter f_custom4; }; }
filter f_custom5 { p1 = 42; p2 = 42; p3 = 42; p4 = 42; p5 = 42; reject; }
protocol perf perf_custom5 from pt { ipv4 { import filter f_custom5; }; }
filter f_custom6 { p1 = 42; p2 = 42; p3 = 42; p4 = 42; p5 = 42; p6 = 42; reject; }
protocol perf perf_custom6 from pt { ipv4 { import filter f_custom6; }; }

filter f_ec_list0 { bgp_ext_community = --empty--; reject; };
protocol perf perf_ec_list0 from pt { ipv4 { import filter f_ec_list0; }; }
filter f_ec_list1 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); reject; };
protocol perf perf_ec_list1 from pt { ipv4 { import filter f_ec_list1; }; }
filter f_ec_list2 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); bgp_ext_community.add((rt, 43, 4243)); reject; };
protocol perf perf_ec_list2 from pt { ipv4 { import filter f_ec_list2; }; }
filter f_ec_list3 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); bgp_ext_community.add((rt, 43, 4243)); bgp_ext_community.add((rt, 44, 4244)); reject; };
protocol perf perf_ec_list3 from pt { ipv4 { import filter f_ec_list3; }; }
filter f_ec_list4 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); bgp_ext_community.add((rt, 43, 4243)); bgp_ext_community.add((rt, 44, 4244)); bgp_ext_community.add((rt, 45, 4245)); reject; };
protocol perf perf_ec_list4 from pt { ipv4 { import filter f_ec_list4; }; }
filter f_ec_list5 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); bgp_ext_community.add((rt, 43, 4243)); bgp_ext_community.add((rt, 44, 4244)); bgp_ext_community.add((rt, 45, 4245)); bgp_ext_community.add((rt, 46, 4246)); reject; };
protocol perf perf_ec_list5 from pt { ipv4 { import filter f_ec_list5; }; }
filter f_ec_list6 { bgp_ext_community = --empty--; bgp_ext_community.add((rt, 42, 4242)); bgp_ext_community.add((rt, 43, 4243)); bgp_ext_community.add((rt, 44, 4244)); bgp_ext_community.add((rt, 45, 4245)); bgp_ext_community.add((rt, 46, 4246)); bgp_ext_community.add((rt, 47, 4247)); reject; };
protocol perf perf_ec_list6 from pt { ipv4 { import filter f_ec_list6; }; }
